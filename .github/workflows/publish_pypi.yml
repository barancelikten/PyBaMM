name: Build and publish package to PyPI

on:
  release:
    types: [published]
  schedule:
    # Run at 10 am UTC on day-of-month 1 and 15.
    - cron: "0 10 1,15 * *"
  workflow_dispatch:
    inputs:
      target:
        description: 'Deployment target. Can be "pypi" or "testpypi"'
        default: "pypi"
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build_windows_wheels:
    name: Build wheels on windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.3

      - name: Clone pybind11 repo (no history)
        run: git clone --depth 1 --branch v2.10.4 https://github.com/pybind/pybind11.git

      # remove when a new vcpkg version is released
      - name: Install the latest commit of vcpkg on windows
        run: |
          cd C:\
          rm -r -fo 'C:\vcpkg'
          git clone https://github.com/microsoft/vcpkg
          cd vcpkg
          .\bootstrap-vcpkg.bat

      - name: Cache packages installed through vcpkg on windows
        uses: actions/cache@v3
        env:
          cache-name: vckpg_binary_cache
        with:
          path: C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: ${{ runner.os }}-build-VS2022-${{ env.cache-name }}-${{ hashFiles('vcpkg*.json') }}

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Build 64 bits wheels on Windows
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENVIRONMENT: 'PYBAMM_USE_VCPKG=ON VCPKG_ROOT_DIR=C:\vcpkg VCPKG_DEFAULT_TRIPLET=x64-windows-static-md VCPKG_FEATURE_FLAGS=manifests,registries CMAKE_GENERATOR="Visual Studio 17 2022" CMAKE_GENERATOR_PLATFORM=x64'
          CIBW_ARCHS: "AMD64"

      - name: Upload windows wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows_wheels
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.3

      - name: Clone pybind11 repo (no history)
        run: git clone --depth 1 --branch v2.10.4 https://github.com/pybind/pybind11.git

      - name: Install SUNDIALS on macOS
        if: matrix.os == 'macos-latest'
        run: |
          # https://github.com/actions/virtual-environments/issues/1280
          rm -f /usr/local/bin/2to3*
          rm -f /usr/local/bin/idle3*
          rm -f /usr/local/bin/pydoc3*
          rm -f /usr/local/bin/python3*
          brew update
          brew reinstall gcc
          brew install libomp
          python -m pip install cmake wget
          python scripts/install_KLU_Sundials.py

      - name: Build wheels on Linux and MacOS
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: x86_64
          CIBW_BEFORE_ALL_LINUX: >
            yum -y install openblas-devel lapack-devel &&
            bash build_manylinux_wheels/install_sundials.sh 6.0.3 6.5.0

          CIBW_BEFORE_BUILD_LINUX: "python -m pip install cmake casadi numpy"
          CIBW_BEFORE_BUILD_MACOS: >
            python -m pip
            install cmake casadi numpy &&
            python scripts/fix_casadi_rpath_mac.py &&
            scripts/fix_suitesparse_rpath_mac.sh
          # got error "re.error: multiple repeat at position 104" on python 3.7 when --require-archs added, so remove
          # it for mac
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            delocate-listdeps {wheel} &&
            delocate-wheel -v -w {dest_dir} {wheel}
          CIBW_SKIP: "pp* *musllinux*"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install --upgrade pip setuptools wheel build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz
          if-no-files-found: error

  publish_pypi:
    if: github.event_name != 'schedule'
    name: Upload package to PyPI
    needs: [build_wheels, build_windows_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Move all package files to files/
        run: |
          mkdir files
          mv windows_wheels/* wheels/* sdist/* files/

      - name: Publish on PyPI
        if: github.event.inputs.target == 'pypi' || github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages-dir: files/

      - name: Publish on TestPyPI
        if: github.event.inputs.target == 'testpypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN }}
          packages-dir: files/
          repository-url: https://test.pypi.org/legacy/

  open_failure_issue:
    needs: [build_windows_wheels, build_wheels, build_sdist]
    name: Open an issue if build fails
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LOGS: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      with:
        filename: .github/wheel_failure.md
